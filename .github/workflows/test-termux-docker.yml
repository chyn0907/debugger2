name: Build and push Docker image

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CI: true
  DOCKER_BUILDKIT: 1

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CPU_ARCH:
          - aarch64
          - i686
          - x86_64
          - arm
    steps:

    - name: Clone repository
      uses: actions/checkout@v2
      with:
        repository: 'termux/termux-docker'

    - name: Setup binfmt_misc
      if: (matrix.CPU_ARCH == 'aarch64') || (matrix.CPU_ARCH == 'arm')
      run: docker run --rm --privileged aptman/qus -s -- -p aarch64 arm

    - name: Build images
      if: (matrix.CPU_ARCH != 'arm')
      run: |
        case '${{ matrix.CPU_ARCH }}' in
          arm|aarch64) SYSTEM_TYPE=arm;;
          *) SYSTEM_TYPE=x86;;
        esac
        docker build -t \
          docker.io/kcubeterm/termux:${{ matrix.CPU_ARCH }} \
          -f ./Dockerfile \
          --build-arg BOOTSTRAP_ARCH=${{ matrix.CPU_ARCH }} \
          --build-arg SYSTEM_TYPE="${SYSTEM_TYPE}" \
          .

    - name: Build termux:arm
      if: (matrix.CPU_ARCH == 'arm')
      run: |
        docker run -td --rm --privileged --name ubuntu-temp ubuntu:14.04
        docker exec -i ubuntu-temp apt-get update
        docker exec -i ubuntu-temp apt-get install -yq ca-certificates curl gnupg lsb-release git sudo
        docker exec -i ubuntu-temp bash -c "echo \"deb [arch=\$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list"
        docker exec -i ubuntu-temp apt-get update
        docker exec -i ubuntu-temp apt-get install -yq --force-yes docker-ce
        docker exec -i ubuntu-temp bash -c "nohup dockerd > /dev/null 2>&1 &"
        docker exec -i ubuntu-temp git clone https://github.com/termux/termux-docker.git /root/termux-docker
        docker exec -i ubuntu-temp docker build -t termux:arm -f /root/termux-docker/Dockerfile --build-arg BOOTSTRAP_ARCH=arm --build-arg SYSTEM_TYPE=arm /root/termux-docker
        # Seems that docker COPY cannot process owner and group correctly, change it manually.
        docker exec -i ubuntu-temp docker run --rm -u 0 -id --privileged --name termux-arm-tmp termux:arm
        docker exec -i ubuntu-temp docker exec -u 0 -i termux-arm-tmp bash -c """
            chown -Rh 0:0 /system && \
            chown -Rh 1000:1000 /data/data/com.termux && \
            chown 1000:1000 /system/etc/hosts /system/etc/static-dns-hosts.txt && \
            find /system -type d -exec chmod 755 \"{}\" \; && \
            find /system -type f -executable -exec chmod 755 \"{}\" \; && \
            find /system -type f ! -executable -exec chmod 644 \"{}\" \; && \
            find /data -type d -exec chmod 755 \"{}\" \; && \
            find /data/data/com.termux/files -type f -o -type d -exec chmod g-rwx,o-rwx \"{}\" \; &&
            cd /data/data/com.termux/files/usr && \
            find ./bin ./lib/apt ./lib/bash ./libexec -type f -exec chmod 700 \"{}\" \;
        """
        docker exec -i ubuntu-temp docker export termux-arm-tmp > termux-arm.tar
        docker import -c "ENV ANDROID_DATA     /data" \
                      -c "ENV ANDROID_ROOT     /system" \
                      -c "ENV HOME             /data/data/com.termux/files/home" \
                      -c "ENV LANG             en_US.UTF-8" \
                      -c "ENV PATH             /data/data/com.termux/files/usr/bin" \
                      -c "ENV PREFIX           /data/data/com.termux/files/usr" \
                      -c "ENV TMPDIR           /data/data/com.termux/files/usr/tmp" \
                      -c "ENV TZ               UTC" \
                      -c "WORKDIR /data/data/com.termux/files/home" \
                      -c "USER 1000:1000" \
                      -c "CMD [\"/data/data/com.termux/files/usr/bin/login\"]" \
                      termux-arm.tar docker.io/kcubeterm/termux:arm
        docker kill ubuntu-temp
    - name: Test
      run: docker run --privileged --rm -i kcubeterm/termux:${{ matrix.CPU_ARCH }} login -c "ls -l"
    # - name: Login to Docker Hub
    #   if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'termux/termux-docker'
    #   uses: docker/login-action@v1
    #   with:
    #     username: kcubeterm
    #     password: ${{ secrets.KCUBETERM_DOCKER_TOKEN }}

    # - name: Push to Docker Hub
    #   if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'termux/termux-docker'
    #   run: |
    #     docker push docker.io/kcubeterm/termux:${{ matrix.CPU_ARCH }}
    #     if [ ${{ matrix.CPU_ARCH }} = i686 ]; then
    #       docker tag docker.io/kcubeterm/termux:i686 docker.io/kcubeterm/termux:latest
    #       docker push docker.io/kcubeterm/termux:latest
    #     fi
